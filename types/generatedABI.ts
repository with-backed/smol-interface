// Generated by @wagmi/cli@0.1.14 on 4/13/2023 at 9:58:46 AM

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Quoter
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6)
 */
export const quoterABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_factory', internalType: 'address', type: 'address' },
      { name: '_WETH9', internalType: 'address', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'WETH9',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'factory',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'path', internalType: 'bytes', type: 'bytes' },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'quoteExactInput',
    outputs: [{ name: 'amountOut', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenIn', internalType: 'address', type: 'address' },
      { name: 'tokenOut', internalType: 'address', type: 'address' },
      { name: 'fee', internalType: 'uint24', type: 'uint24' },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256' },
      { name: 'sqrtPriceLimitX96', internalType: 'uint160', type: 'uint160' },
    ],
    name: 'quoteExactInputSingle',
    outputs: [{ name: 'amountOut', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'path', internalType: 'bytes', type: 'bytes' },
      { name: 'amountOut', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'quoteExactOutput',
    outputs: [{ name: 'amountIn', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenIn', internalType: 'address', type: 'address' },
      { name: 'tokenOut', internalType: 'address', type: 'address' },
      { name: 'fee', internalType: 'uint24', type: 'uint24' },
      { name: 'amountOut', internalType: 'uint256', type: 'uint256' },
      { name: 'sqrtPriceLimitX96', internalType: 'uint160', type: 'uint160' },
    ],
    name: 'quoteExactOutputSingle',
    outputs: [{ name: 'amountIn', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount0Delta', internalType: 'int256', type: 'int256' },
      { name: 'amount1Delta', internalType: 'int256', type: 'int256' },
      { name: 'path', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6)
 */
export const quoterAddress = {
  1: '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6)
 */
export const quoterConfig = { address: quoterAddress, abi: quoterABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PaprController
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x3b29c19ff2fcea0ff98d0ef5b184354d74ea74b0)
 */
export const paprControllerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: '_maxLTV', internalType: 'uint256', type: 'uint256' },
      { name: 'underlying', internalType: 'contract ERC20', type: 'address' },
      { name: 'oracleSigner', internalType: 'address', type: 'address' },
      {
        name: 'startingCollateral',
        internalType: 'contract ERC721[]',
        type: 'address[]',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'AccountHasNoDebt' },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  { type: 'error', inputs: [], name: 'AssetNotProposed' },
  { type: 'error', inputs: [], name: 'AuctionExists' },
  { type: 'error', inputs: [], name: 'CollateralAddressesDoNotMatch' },
  { type: 'error', inputs: [], name: 'DebtAmountExceedsUint184' },
  {
    type: 'error',
    inputs: [
      { name: 'vaultDebt', internalType: 'uint256', type: 'uint256' },
      { name: 'maxDebt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'ExceedsMaxDebt',
  },
  { type: 'error', inputs: [], name: 'FundingPeriodTooLong' },
  { type: 'error', inputs: [], name: 'FundingPeriodTooShort' },
  { type: 'error', inputs: [], name: 'IncorrectOracleSigner' },
  {
    type: 'error',
    inputs: [
      { name: 'received', internalType: 'uint256', type: 'uint256' },
      { name: 'expected', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientPayment',
  },
  { type: 'error', inputs: [], name: 'InvalidAuction' },
  { type: 'error', inputs: [], name: 'InvalidCollateral' },
  { type: 'error', inputs: [], name: 'InvalidCollateralAccountPair' },
  { type: 'error', inputs: [], name: 'InvalidUniswapV3Pool' },
  { type: 'error', inputs: [], name: 'LiquidationsLocked' },
  {
    type: 'error',
    inputs: [
      { name: 'currentPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'MaxPriceTooLow',
  },
  { type: 'error', inputs: [], name: 'MinAuctionSpacing' },
  { type: 'error', inputs: [], name: 'NotLiquidatable' },
  { type: 'error', inputs: [], name: 'OnlyCollateralOwner' },
  { type: 'error', inputs: [], name: 'OracleMessageTimestampInvalid' },
  {
    type: 'error',
    inputs: [
      { name: 'deadline', internalType: 'uint256', type: 'uint256' },
      { name: 'currentTimestamp', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'PassedDeadline',
  },
  { type: 'error', inputs: [], name: 'PoolTokensDoNotMatch' },
  { type: 'error', inputs: [], name: 'ProposalPeriodNotComplete' },
  {
    type: 'error',
    inputs: [
      { name: 'minOut', internalType: 'uint256', type: 'uint256' },
      { name: 'actualOut', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'TooLittleOut',
  },
  { type: 'error', inputs: [], name: 'WrongCurrencyFromOracleMessage' },
  { type: 'error', inputs: [], name: 'WrongIdentifierFromOracleMessage' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'collateralAddress',
        internalType: 'contract ERC721',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'AddCollateral',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'collateral',
        internalType: 'contract ERC721',
        type: 'address',
        indexed: true,
      },
      { name: 'isAllowed', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'AllowCollateral',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'asset',
        internalType: 'contract ERC721',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'CancelProposedAllowedCollateral',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'auctionID',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'price',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'EndAuction',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'collateralAddress',
        internalType: 'contract ERC721',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'IncreaseDebt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferStarted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'asset',
        internalType: 'contract ERC721',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'ProposeAllowedCollateral',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'collateralAddress',
        internalType: 'contract ERC721',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ReduceDebt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'collateralAddress',
        internalType: 'contract ERC721',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'RemoveCollateral',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'discount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetAuctionCreatorDiscount',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'fundingPeriod',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetFundingPeriod',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'pool', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'SetPool',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'auctionID',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'auctionAssetID',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'auctionAssetContract',
        internalType: 'contract ERC721',
        type: 'address',
        indexed: true,
      },
      {
        name: 'nftOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'perPeriodDecayPercentWad',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'secondsInPeriod',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'startPrice',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paymentAsset',
        internalType: 'contract ERC20',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'StartAuction',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newPeriod',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdateFundingPeriod',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newPool',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UpdatePool',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newTarget',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdateTarget',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_PER_SECOND_PRICE_CHANGE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'asset', internalType: 'contract ERC721', type: 'address' },
    ],
    name: 'acceptProposedCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'collateralArr',
        internalType: 'struct IPaprController.Collateral[]',
        type: 'tuple[]',
        components: [
          { name: 'addr', internalType: 'contract ERC721', type: 'address' },
          { name: 'id', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'addCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'auctionCreatorDiscountPercentWad',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      {
        name: 'auction',
        internalType: 'struct INFTEDA.Auction',
        type: 'tuple',
        components: [
          { name: 'nftOwner', internalType: 'address', type: 'address' },
          { name: 'auctionAssetID', internalType: 'uint256', type: 'uint256' },
          {
            name: 'auctionAssetContract',
            internalType: 'contract ERC721',
            type: 'address',
          },
          {
            name: 'perPeriodDecayPercentWad',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'secondsInPeriod', internalType: 'uint256', type: 'uint256' },
          { name: 'startPrice', internalType: 'uint256', type: 'uint256' },
          {
            name: 'paymentAsset',
            internalType: 'contract ERC20',
            type: 'address',
          },
        ],
      },
    ],
    name: 'auctionCurrentPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'auction',
        internalType: 'struct INFTEDA.Auction',
        type: 'tuple',
        components: [
          { name: 'nftOwner', internalType: 'address', type: 'address' },
          { name: 'auctionAssetID', internalType: 'uint256', type: 'uint256' },
          {
            name: 'auctionAssetContract',
            internalType: 'contract ERC721',
            type: 'address',
          },
          {
            name: 'perPeriodDecayPercentWad',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'secondsInPeriod', internalType: 'uint256', type: 'uint256' },
          { name: 'startPrice', internalType: 'uint256', type: 'uint256' },
          {
            name: 'paymentAsset',
            internalType: 'contract ERC20',
            type: 'address',
          },
        ],
      },
    ],
    name: 'auctionID',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'auctionStartTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'auctionState',
    outputs: [
      { name: 'startTime', internalType: 'uint96', type: 'uint96' },
      { name: 'starter', internalType: 'address', type: 'address' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      {
        name: 'collateralAsset',
        internalType: 'contract ERC721',
        type: 'address',
      },
      {
        name: 'params',
        internalType: 'struct IPaprController.SwapParams',
        type: 'tuple',
        components: [
          { name: 'amount', internalType: 'uint256', type: 'uint256' },
          { name: 'minOut', internalType: 'uint256', type: 'uint256' },
          {
            name: 'sqrtPriceLimitX96',
            internalType: 'uint160',
            type: 'uint160',
          },
          { name: 'swapFeeTo', internalType: 'address', type: 'address' },
          { name: 'swapFeeBips', internalType: 'uint256', type: 'uint256' },
          { name: 'deadline', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'buyAndReduceDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'contract ERC721', type: 'address' }],
    name: 'cachedPriceForAsset',
    outputs: [
      { name: 'timestamp', internalType: 'uint40', type: 'uint40' },
      { name: 'price', internalType: 'uint216', type: 'uint216' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'asset', internalType: 'contract ERC721', type: 'address' },
    ],
    name: 'cancelProposedCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'contract ERC721', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'collateralOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'fundingPeriod',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'mintTo', internalType: 'address', type: 'address' },
      { name: 'asset', internalType: 'contract ERC721', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      {
        name: 'oracleInfo',
        internalType: 'struct ReservoirOracleUnderwriter.OracleInfo',
        type: 'tuple',
        components: [
          {
            name: 'message',
            internalType: 'struct ReservoirOracle.Message',
            type: 'tuple',
            components: [
              { name: 'id', internalType: 'bytes32', type: 'bytes32' },
              { name: 'payload', internalType: 'bytes', type: 'bytes' },
              { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
              { name: 'signature', internalType: 'bytes', type: 'bytes' },
            ],
          },
          {
            name: 'sig',
            internalType: 'struct ReservoirOracleUnderwriter.Sig',
            type: 'tuple',
            components: [
              { name: 'v', internalType: 'uint8', type: 'uint8' },
              { name: 'r', internalType: 'bytes32', type: 'bytes32' },
              { name: 's', internalType: 'bytes32', type: 'bytes32' },
            ],
          },
        ],
      },
    ],
    name: 'increaseDebt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proceedsTo', internalType: 'address', type: 'address' },
      {
        name: 'collateralAsset',
        internalType: 'contract ERC721',
        type: 'address',
      },
      {
        name: 'params',
        internalType: 'struct IPaprController.SwapParams',
        type: 'tuple',
        components: [
          { name: 'amount', internalType: 'uint256', type: 'uint256' },
          { name: 'minOut', internalType: 'uint256', type: 'uint256' },
          {
            name: 'sqrtPriceLimitX96',
            internalType: 'uint160',
            type: 'uint160',
          },
          { name: 'swapFeeTo', internalType: 'address', type: 'address' },
          { name: 'swapFeeBips', internalType: 'uint256', type: 'uint256' },
          { name: 'deadline', internalType: 'uint256', type: 'uint256' },
        ],
      },
      {
        name: 'oracleInfo',
        internalType: 'struct ReservoirOracleUnderwriter.OracleInfo',
        type: 'tuple',
        components: [
          {
            name: 'message',
            internalType: 'struct ReservoirOracle.Message',
            type: 'tuple',
            components: [
              { name: 'id', internalType: 'bytes32', type: 'bytes32' },
              { name: 'payload', internalType: 'bytes', type: 'bytes' },
              { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
              { name: 'signature', internalType: 'bytes', type: 'bytes' },
            ],
          },
          {
            name: 'sig',
            internalType: 'struct ReservoirOracleUnderwriter.Sig',
            type: 'tuple',
            components: [
              { name: 'v', internalType: 'uint8', type: 'uint8' },
              { name: 'r', internalType: 'bytes32', type: 'bytes32' },
              { name: 's', internalType: 'bytes32', type: 'bytes32' },
            ],
          },
        ],
      },
    ],
    name: 'increaseDebtAndSell',
    outputs: [{ name: 'amountOut', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'contract ERC721', type: 'address' }],
    name: 'isAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'contract ERC721', type: 'address' }],
    name: 'lastAuctionStartPrice',
    outputs: [
      { name: 'timestamp', internalType: 'uint40', type: 'uint40' },
      { name: 'price', internalType: 'uint216', type: 'uint216' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lastUpdated',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'liquidationAuctionMinSpacing',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'mark',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'totalCollateraValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'maxDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxLTV',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'newTarget',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: 'from', internalType: 'address', type: 'address' },
      { name: '_id', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'oracleSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'papr',
    outputs: [{ name: '', internalType: 'contract ERC20', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pendingOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pool',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'asset', internalType: 'contract ERC721', type: 'address' },
    ],
    name: 'proposeAllowedCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'auction',
        internalType: 'struct INFTEDA.Auction',
        type: 'tuple',
        components: [
          { name: 'nftOwner', internalType: 'address', type: 'address' },
          { name: 'auctionAssetID', internalType: 'uint256', type: 'uint256' },
          {
            name: 'auctionAssetContract',
            internalType: 'contract ERC721',
            type: 'address',
          },
          {
            name: 'perPeriodDecayPercentWad',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'secondsInPeriod', internalType: 'uint256', type: 'uint256' },
          { name: 'startPrice', internalType: 'uint256', type: 'uint256' },
          {
            name: 'paymentAsset',
            internalType: 'contract ERC20',
            type: 'address',
          },
        ],
      },
      { name: 'maxPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'sendTo', internalType: 'address', type: 'address' },
      {
        name: 'oracleInfo',
        internalType: 'struct ReservoirOracleUnderwriter.OracleInfo',
        type: 'tuple',
        components: [
          {
            name: 'message',
            internalType: 'struct ReservoirOracle.Message',
            type: 'tuple',
            components: [
              { name: 'id', internalType: 'bytes32', type: 'bytes32' },
              { name: 'payload', internalType: 'bytes', type: 'bytes' },
              { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
              { name: 'signature', internalType: 'bytes', type: 'bytes' },
            ],
          },
          {
            name: 'sig',
            internalType: 'struct ReservoirOracleUnderwriter.Sig',
            type: 'tuple',
            components: [
              { name: 'v', internalType: 'uint8', type: 'uint8' },
              { name: 'r', internalType: 'bytes32', type: 'bytes32' },
              { name: 's', internalType: 'bytes32', type: 'bytes32' },
            ],
          },
        ],
      },
    ],
    name: 'purchaseLiquidationAuctionNFT',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'asset', internalType: 'contract ERC721', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'reduceDebt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'assets', internalType: 'contract ERC721[]', type: 'address[]' },
    ],
    name: 'removeAllowedCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sendTo', internalType: 'address', type: 'address' },
      {
        name: 'collateralArr',
        internalType: 'struct IPaprController.Collateral[]',
        type: 'tuple[]',
        components: [
          { name: 'addr', internalType: 'contract ERC721', type: 'address' },
          { name: 'id', internalType: 'uint256', type: 'uint256' },
        ],
      },
      {
        name: 'oracleInfo',
        internalType: 'struct ReservoirOracleUnderwriter.OracleInfo',
        type: 'tuple',
        components: [
          {
            name: 'message',
            internalType: 'struct ReservoirOracle.Message',
            type: 'tuple',
            components: [
              { name: 'id', internalType: 'bytes32', type: 'bytes32' },
              { name: 'payload', internalType: 'bytes', type: 'bytes' },
              { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
              { name: 'signature', internalType: 'bytes', type: 'bytes' },
            ],
          },
          {
            name: 'sig',
            internalType: 'struct ReservoirOracleUnderwriter.Sig',
            type: 'tuple',
            components: [
              { name: 'v', internalType: 'uint8', type: 'uint8' },
              { name: 'r', internalType: 'bytes32', type: 'bytes32' },
              { name: 's', internalType: 'bytes32', type: 'bytes32' },
            ],
          },
        ],
      },
    ],
    name: 'removeCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_fundingPeriod', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setFundingPeriod',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_pool', internalType: 'address', type: 'address' }],
    name: 'setPool',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      {
        name: 'collateral',
        internalType: 'struct IPaprController.Collateral',
        type: 'tuple',
        components: [
          { name: 'addr', internalType: 'contract ERC721', type: 'address' },
          { name: 'id', internalType: 'uint256', type: 'uint256' },
        ],
      },
      {
        name: 'oracleInfo',
        internalType: 'struct ReservoirOracleUnderwriter.OracleInfo',
        type: 'tuple',
        components: [
          {
            name: 'message',
            internalType: 'struct ReservoirOracle.Message',
            type: 'tuple',
            components: [
              { name: 'id', internalType: 'bytes32', type: 'bytes32' },
              { name: 'payload', internalType: 'bytes', type: 'bytes' },
              { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
              { name: 'signature', internalType: 'bytes', type: 'bytes' },
            ],
          },
          {
            name: 'sig',
            internalType: 'struct ReservoirOracleUnderwriter.Sig',
            type: 'tuple',
            components: [
              { name: 'v', internalType: 'uint8', type: 'uint8' },
              { name: 'r', internalType: 'bytes32', type: 'bytes32' },
              { name: 's', internalType: 'bytes32', type: 'bytes32' },
            ],
          },
        ],
      },
    ],
    name: 'startLiquidationAuction',
    outputs: [
      {
        name: 'auction',
        internalType: 'struct INFTEDA.Auction',
        type: 'tuple',
        components: [
          { name: 'nftOwner', internalType: 'address', type: 'address' },
          { name: 'auctionAssetID', internalType: 'uint256', type: 'uint256' },
          {
            name: 'auctionAssetContract',
            internalType: 'contract ERC721',
            type: 'address',
          },
          {
            name: 'perPeriodDecayPercentWad',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'secondsInPeriod', internalType: 'uint256', type: 'uint256' },
          { name: 'startPrice', internalType: 'uint256', type: 'uint256' },
          {
            name: 'paymentAsset',
            internalType: 'contract ERC20',
            type: 'address',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'target',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'underlying',
    outputs: [{ name: '', internalType: 'contract ERC20', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'asset', internalType: 'contract ERC721', type: 'address' },
      {
        name: 'priceKind',
        internalType: 'enum ReservoirOracleUnderwriter.PriceKind',
        type: 'uint8',
      },
      {
        name: 'oracleInfo',
        internalType: 'struct ReservoirOracleUnderwriter.OracleInfo',
        type: 'tuple',
        components: [
          {
            name: 'message',
            internalType: 'struct ReservoirOracle.Message',
            type: 'tuple',
            components: [
              { name: 'id', internalType: 'bytes32', type: 'bytes32' },
              { name: 'payload', internalType: 'bytes', type: 'bytes' },
              { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
              { name: 'signature', internalType: 'bytes', type: 'bytes' },
            ],
          },
          {
            name: 'sig',
            internalType: 'struct ReservoirOracleUnderwriter.Sig',
            type: 'tuple',
            components: [
              { name: 'v', internalType: 'uint8', type: 'uint8' },
              { name: 'r', internalType: 'bytes32', type: 'bytes32' },
              { name: 's', internalType: 'bytes32', type: 'bytes32' },
            ],
          },
        ],
      },
      { name: 'guard', internalType: 'bool', type: 'bool' },
    ],
    name: 'underwritePriceForCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'amount0Delta', internalType: 'int256', type: 'int256' },
      { name: 'amount1Delta', internalType: 'int256', type: 'int256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'updateTarget',
    outputs: [{ name: 'nTarget', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'asset', internalType: 'contract ERC721', type: 'address' },
    ],
    name: 'vaultInfo',
    outputs: [
      {
        name: '',
        internalType: 'struct IPaprController.VaultInfo',
        type: 'tuple',
        components: [
          { name: 'count', internalType: 'uint16', type: 'uint16' },
          { name: 'auctionCount', internalType: 'uint16', type: 'uint16' },
          {
            name: 'latestAuctionStartTime',
            internalType: 'uint40',
            type: 'uint40',
          },
          { name: 'debt', internalType: 'uint184', type: 'uint184' },
        ],
      },
    ],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x3b29c19ff2fcea0ff98d0ef5b184354d74ea74b0)
 */
export const paprControllerAddress = {
  1: '0x3b29c19ff2fcEa0Ff98D0ef5B184354D74eA74b0',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x3b29c19ff2fcea0ff98d0ef5b184354d74ea74b0)
 */
export const paprControllerConfig = {
  address: paprControllerAddress,
  abi: paprControllerABI,
} as const
